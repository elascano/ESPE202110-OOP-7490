package ec.edu.espe.smartcity.view;

import com.mongodb.client.MongoCollection;
import ec.edu.espe.smartcity.model.ParkingGarage;
import java.util.Calendar;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import org.bson.Document;
import utils.DBManager;

/**
 *
 * @author Camila
 */
public class FrmRegisterParking extends javax.swing.JFrame {

    MongoCollection<Document> ParkingGarage = new DBManager().data().getCollection("Cars");
    public static LinkedList parking = new LinkedList();
    public int find;

    /**
     * Creates new form FrmRegisterParking
     */
    public FrmRegisterParking() {
        initComponents();
        btnDelete.setEnabled(false);
        btnFind.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnList.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnList = new javax.swing.JButton();
        txtLicensePlate = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        cmbColor = new javax.swing.JComboBox<>();
        cmbType = new javax.swing.JComboBox<>();
        Date date = new Date();
        SpinnerDateModel arrival =
        new SpinnerDateModel(date,null,null,Calendar.HOUR_OF_DAY);
        spnArrivalTime = new javax.swing.JSpinner(arrival);
        spnArrivalTime = new javax.swing.JSpinner(arrival);
        Date exitDate = new Date();
        SpinnerDateModel exit =
        new SpinnerDateModel(exitDate, null, null, Calendar.HOUR_OF_DAY);
        spnExitTime = new javax.swing.JSpinner(exit);
        lblErrorUser = new javax.swing.JLabel();
        lblErrorLicense = new javax.swing.JLabel();
        lblErrorColor = new javax.swing.JLabel();
        lblErrorType = new javax.swing.JLabel();
        lblCorrectUser = new javax.swing.JLabel();
        lblCorrectLicense = new javax.swing.JLabel();
        lblCorrectColor = new javax.swing.JLabel();
        lblCorrectType = new javax.swing.JLabel();
        lblCorrectArrival = new javax.swing.JLabel();
        lblCorrectExit = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("User:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("License Plate:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Color:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Arrival Time:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Exit Time:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Type:");

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\Camila\\Desktop\\ESPE\\II SEMESTRE\\OPP\\COPIA REPOSITORIO GITHUB\\ASSIGMENTS\\tecac\\unit3\\HW17EventsValidateFields\\SmartCity\\images\\car-icon.png")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Register Car");

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFind.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnList.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnList.setText("List");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        txtLicensePlate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtLicensePlateKeyTyped(evt);
            }
        });

        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });

        cmbColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option", "Black", "Red", "White", "Blue", "Other" }));
        cmbColor.setAutoscrolls(true);
        cmbColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbColorMouseClicked(evt);
            }
        });

        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Option", "Sedan", "Familiar", "Sport", "Van", "Other" }));
        cmbType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbTypeMouseClicked(evt);
            }
        });

        JSpinner.DateEditor arrivalTime = new JSpinner.DateEditor(spnArrivalTime, "HH:mm:ss");
        spnArrivalTime.setEditor(arrivalTime);
        spnArrivalTime.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnArrivalTimeStateChanged(evt);
            }
        });
        spnArrivalTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spnArrivalTimeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                spnArrivalTimeMouseEntered(evt);
            }
        });

        JSpinner.DateEditor exitT = new JSpinner.DateEditor(spnExitTime, "HH:mm:ss");
        spnExitTime.setEditor(exitT);
        spnExitTime.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnExitTimeStateChanged(evt);
            }
        });
        spnExitTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                spnExitTimeMouseClicked(evt);
            }
        });

        lblErrorUser.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblErrorUser.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorLicense.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblErrorLicense.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorColor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblErrorColor.setForeground(new java.awt.Color(255, 0, 51));

        lblErrorType.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblErrorType.setForeground(new java.awt.Color(255, 0, 51));

        lblCorrectUser.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCorrectUser.setForeground(new java.awt.Color(51, 51, 255));

        lblCorrectLicense.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCorrectLicense.setForeground(new java.awt.Color(51, 51, 255));

        lblCorrectColor.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        lblCorrectColor.setForeground(new java.awt.Color(51, 51, 255));
        lblCorrectColor.setText("*Select only one color:");

        lblCorrectType.setFont(new java.awt.Font("Tahoma", 1, 8)); // NOI18N
        lblCorrectType.setForeground(new java.awt.Color(51, 51, 255));
        lblCorrectType.setText("*Select only one type:");

        lblCorrectArrival.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCorrectArrival.setForeground(new java.awt.Color(51, 51, 255));

        lblCorrectExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCorrectExit.setForeground(new java.awt.Color(51, 51, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnList, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(576, 576, 576)
                        .addComponent(lblErrorUser, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(57, 57, 57)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(145, 145, 145)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorLicense, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorColor, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtLicensePlate)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCorrectColor)
                                            .addComponent(lblCorrectType)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCorrectUser)
                                            .addComponent(lblCorrectLicense))))
                                .addGap(97, 97, 97))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spnExitTime, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCorrectExit))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spnArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCorrectArrival)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel8)
                .addGap(26, 26, 26)
                .addComponent(lblErrorUser)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblCorrectUser))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLicensePlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(lblCorrectLicense)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(lblErrorLicense)
                                .addGap(54, 54, 54)
                                .addComponent(lblErrorColor)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(lblCorrectColor))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(lblCorrectType))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spnArrivalTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCorrectArrival)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(spnExitTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCorrectExit))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnFind)
                    .addComponent(btnUpdate)
                    .addComponent(btnList))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        FrmListParkingGarage show = new FrmListParkingGarage();
        show.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnListActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String user = txtUser.getText();
        String licensePlate = txtLicensePlate.getText();
        String color = (String) cmbColor.getSelectedItem();
        String type = (String) cmbType.getSelectedItem();
        String arrivalTime = spnArrivalTime.getValue().toString();
        String exitTime = spnExitTime.getValue().toString();

        if (txtUser.getText().isEmpty() || txtLicensePlate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Complete in all the fields!");

        } else {
            ParkingGarage car = new ParkingGarage(user, licensePlate, color, arrivalTime, exitTime, type);
            parking.add(car);
            JOptionPane.showMessageDialog(this, "Successful register -->" + licensePlate);
            btnDelete.setEnabled(true);
            btnFind.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnList.setEnabled(true);

            Document data = new org.bson.Document();
            data.put("User", txtUser.getText());
            data.put("License Plate", txtLicensePlate.getText());
            data.put("Color", cmbColor.getSelectedItem());
            data.put("Type", cmbType.getSelectedItem());
            data.put("Arrival Time", spnArrivalTime.getValue().toString());
            data.put("Exit Time", spnExitTime.getValue().toString());
            ParkingGarage.insertOne(data);
            txtUser.setText("");
            txtLicensePlate.setText("");
            cmbColor.setSelectedItem("Select Option");
            cmbType.setSelectedItem("Select Option");
            spnArrivalTime.setValue("");
            spnExitTime.setValue("");
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        String licensePlate;
        ParkingGarage car;
        btnAdd.setEnabled(false);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnList.setEnabled(true);
        licensePlate = JOptionPane.showInputDialog("Please, enter License Plate");
        for (int i = 0; i < parking.size(); i++) {
            car = (ParkingGarage) parking.get(i);
            if (licensePlate.equalsIgnoreCase(car.getLicensePlate())) {
                txtUser.setText(car.getUser());
                txtLicensePlate.setText(car.getLicensePlate());
                cmbColor.setSelectedItem(car.getColor());
                cmbType.setSelectedItem(car.getType());
                spnArrivalTime.setValue(car.getArrivalTime());
                spnExitTime.setValue(car.getExitTime());
                find = 1;
                break;
            }
            btnAdd.setEnabled(true);
            btnDelete.setEnabled(true);
            btnUpdate.setEnabled(true);
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        JOptionPane.showMessageDialog(this, "Delete Successfully");
        parking.remove(find);
        txtUser.setText("");
        txtLicensePlate.setText("");
        cmbColor.setSelectedItem("Select Option");
        cmbType.setSelectedItem("Select Option");
        spnArrivalTime.setValue("");
        spnExitTime.setValue("");


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String user = txtUser.getText();
        String licensePlate = txtLicensePlate.getText();
        String color = (String) cmbColor.getSelectedItem();
        String type = (String) cmbType.getSelectedItem();
        String arrivalTime = spnArrivalTime.getValue().toString();
        String exitTime = spnExitTime.getValue().toString();
        ParkingGarage car;

        car = new ParkingGarage(user, licensePlate, color, arrivalTime, exitTime, type);
        parking.set(find, car);
        txtUser.setText("");
        txtLicensePlate.setText("");
        cmbColor.setSelectedItem("Select Option");
        cmbType.setSelectedItem("Select Option");
        spnArrivalTime.setValue("");
        spnExitTime.setValue("");

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        char press = evt.getKeyChar();
        if ((press < '0' || press > '9')) {
            lblCorrectUser.setText("Correct");
            String user = txtUser.getText().trim();
            ParkingGarage car;
            for (int i = 0; i < parking.size(); i++) {
                car = (ParkingGarage) parking.get(i);
                if (user.equalsIgnoreCase(car.getUser())) {
                    btnAdd.setEnabled(false);
                    btnDelete.setEnabled(true);
                    btnUpdate.setEnabled(true);
                    btnList.setEnabled(true);
                    btnFind.setEnabled(true);
                    txtUser.setText(car.getUser());
                    txtLicensePlate.setText(car.getLicensePlate());
                    cmbColor.setSelectedItem(car.getColor());
                    cmbType.setSelectedItem(car.getType());
                    spnArrivalTime.setValue(car.getArrivalTime());
                    spnExitTime.setValue(car.getExitTime());
                    find = i;
                    break;
                }
            }
        } else {
            lblCorrectUser.setText("Only letters");

        }
    }//GEN-LAST:event_txtUserKeyTyped

    private void txtLicensePlateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLicensePlateKeyTyped
        char press = evt.getKeyChar();
        if ((press < 'a' || press > 'z')) {
            lblCorrectLicense.setText("Correct");
        } else {
            lblCorrectLicense.setText("Only Capital letters and Numbers");

        }
    }//GEN-LAST:event_txtLicensePlateKeyTyped

    private void cmbColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbColorMouseClicked
        String color = (String) cmbColor.getSelectedItem();
        if (color.equals(cmbColor.getSelectedItem())) {
            lblCorrectColor.setText("Correct");
        }


    }//GEN-LAST:event_cmbColorMouseClicked

    private void cmbTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTypeMouseClicked
        String type = (String) cmbType.getSelectedItem();
        if (type.equals(cmbType.getSelectedItem())) {
            lblCorrectType.setText("Correct");
        }
    }//GEN-LAST:event_cmbTypeMouseClicked

    private void spnArrivalTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spnArrivalTimeMouseClicked

    }//GEN-LAST:event_spnArrivalTimeMouseClicked

    private void spnExitTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spnExitTimeMouseClicked

    }//GEN-LAST:event_spnExitTimeMouseClicked

    private void spnArrivalTimeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_spnArrivalTimeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_spnArrivalTimeMouseEntered

    private void spnArrivalTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnArrivalTimeStateChanged
        lblCorrectArrival.setText("Correct");
    }//GEN-LAST:event_spnArrivalTimeStateChanged

    private void spnExitTimeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnExitTimeStateChanged
        lblCorrectExit.setText("Correct");
    }//GEN-LAST:event_spnExitTimeStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegisterParking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegisterParking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegisterParking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegisterParking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegisterParking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbColor;
    private javax.swing.JComboBox<String> cmbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCorrectArrival;
    private javax.swing.JLabel lblCorrectColor;
    private javax.swing.JLabel lblCorrectExit;
    private javax.swing.JLabel lblCorrectLicense;
    private javax.swing.JLabel lblCorrectType;
    private javax.swing.JLabel lblCorrectUser;
    private javax.swing.JLabel lblErrorColor;
    private javax.swing.JLabel lblErrorLicense;
    private javax.swing.JLabel lblErrorType;
    private javax.swing.JLabel lblErrorUser;
    private javax.swing.JSpinner spnArrivalTime;
    private javax.swing.JSpinner spnExitTime;
    private javax.swing.JTextField txtLicensePlate;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
